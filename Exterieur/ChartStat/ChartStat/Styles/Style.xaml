<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <!-- FontSize -->
    <system:Double x:Key="FontSize">15</system:Double>

    <!-- AppMargin -->
    <system:Double x:Key="AppMargin">10</system:Double>

    <!-- SelectionColor -->
    <Color x:Key="SelectionColor">#FFFD9804</Color>

    <!-- SelectionBorderColor -->
    <Color x:Key="SelectionBorderColor">#FFFD9804</Color>

    <!-- SelectionBorderBrush -->
    <LinearGradientBrush x:Key="SelectionBorderBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFEFCF38" Offset="0"/>
        <GradientStop Color="{StaticResource SelectionBorderColor}" Offset="1"/>
    </LinearGradientBrush>

    <!-- Application thickness -->
    <Thickness x:Key="AppThickness" Left="{StaticResource AppMargin}" Top="{StaticResource AppMargin}" Right="{StaticResource AppMargin}" Bottom="{StaticResource AppMargin}" />

    <!-- GroupBorder -->
    <Style x:Key="GroupBorder" TargetType="Border">
        <Setter Property="BorderBrush" Value="{StaticResource SelectionBorderBrush}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="CornerRadius" Value="10" />
        <Setter Property="Margin" Value="{StaticResource AppThickness}" />
    </Style>

    <!-- ListViewItem -->
    <Style TargetType="ListViewItem">
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                                 Color="{StaticResource SelectionColor}"/>
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" 
                                 Color="{StaticResource SelectionColor}"/>
        </Style.Resources>
    </Style>
    
    <!-- GridSplitter -->
    <Style TargetType="ListView">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
    </Style>
    

    <!-- DatePicker -->
    <Style  TargetType="DatePicker">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePicker}">
                    <Grid x:Name="PART_Root">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <DatePickerTextBox x:Name="PART_TextBox"
                                       BorderBrush="{TemplateBinding BorderBrush}"
                                       BorderThickness="{TemplateBinding BorderThickness}"
                                       HorizontalContentAlignment="Stretch"
                                       Padding="{TemplateBinding Padding}"
                                       VerticalContentAlignment="Center"
                                       Visibility="Visible"
                                       FontSize="{StaticResource FontSize}"
                                       Grid.Column="0">
                        </DatePickerTextBox>
                        <Button Grid.Column="0" x:Name="PART_Button">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Button Content="{Binding ElementName=PART_TextBox, Path=Text}" FontSize="{StaticResource FontSize}" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Popup Grid.Column="0" x:Name="PART_Popup" StaysOpen="False" AllowsTransparency="True" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    </Style>

    <!-- GridSplitter -->
    <Style TargetType="GridSplitter">
        <Setter Property="Height" Value="10" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>

    <!-- TextBlock -->
    <Style TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="Margin" Value="{StaticResource AppThickness}" />
    </Style>

    <!-- TextBox -->
    <Style TargetType="TextBox">
        <Setter Property="Padding" Value="10" />
        <Setter Property="Margin" Value="{StaticResource AppThickness}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    </Style>

    <!-- ProcessStatusStyle -->
    <Style x:Key ="ProcessStatusStyle" TargetType="{x:Type Label}">
        <Style.Triggers>

            <DataTrigger Binding="{Binding Path=Tag,
                                RelativeSource={RelativeSource Self}}"
                                Value="None">
                <Setter Property="Foreground" Value="#FF474747" />
            </DataTrigger>
            
            <DataTrigger Binding="{Binding Path=Tag,
                                RelativeSource={RelativeSource Self}}"
                                Value="InProcess">
                <Setter Property="Foreground" Value="Silver" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=Tag,
                                RelativeSource={RelativeSource Self}}"
                                Value="Success">
                <Setter Property="Foreground" Value="{StaticResource SelectionBorderBrush}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=Tag,
                                RelativeSource={RelativeSource Self}}"
                                Value="Fail">
                <Setter Property="Foreground" Value="#FFFF0000" />
            </DataTrigger>

        </Style.Triggers>
        
    </Style>

</ResourceDictionary>